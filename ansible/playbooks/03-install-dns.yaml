- hosts: dns
  name: Install Docker
  become: yes
  tasks:

  - name: uninstall all conflicting packages
    shell: for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

  - name: install dependencies
    apt:
      name:
      - ca-certificates
      - curl
      state: present
      update_cache: true

  - name: Ensure /etc/apt/keyrings directory exists
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download Docker's official GPG key
    get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: '0644'

  - name: Add Docker repository
    shell: |
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable" > /etc/apt/sources.list.d/docker.list
    args:
      executable: /bin/bash

  - name: Update apt cache after adding Docker repo
    apt:
      update_cache: yes

  - name: Install Docker Engine and components
    apt:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      state: present
      update_cache: yes

  - name: Ensure user is added to docker group
    user:
      name: "cloud"
      groups: docker
      append: yes

  - name: Restart Docker to apply group changes
    service:
      name: docker
      state: restarted

  - name: Stop systemd-resolved
    systemd:
      name: systemd-resolved
      state: stopped
      enabled: no

  - name: Remove existing /etc/resolv.conf if it's a symlink
    file:
      path: /etc/resolv.conf
      state: absent
      follow: no

  - name: Create static /etc/resolv.conf
    copy:
      dest: /etc/resolv.conf
      content: |
        nameserver 8.8.8.8
        nameserver 1.1.1.1
      mode: '0644'

  - name: Verify port 53 is free (for debug)
    shell: "ss -tulpn | grep ':53'"
    register: port_53_check
    ignore_errors: yes

  - name: Show port 53 usage
    debug:
      msg: "{{ port_53_check.stdout_lines if port_53_check.stdout_lines else 'Port 53 is free' }}"

  - name: Create CoreDNS directory
    file:
      path: /home/cloud/coredns
      state: directory
      mode: '0755'

  - name: Copy over the Corefile
    template: src=../templates/Corefile dest=/home/cloud/coredns/Corefile

  - name: Copy over the home.daniel-enrique.db zone file
    template: src=../templates/home.daniel-enrique.db dest=/home/cloud/coredns/home.daniel-enrique.db

  - name: Copy over the docker-compose.yaml
    template: src=../templates/docker-compose.yaml dest=/home/cloud/coredns/docker-compose.yaml

  - name: Run Docker Compose to start CoreDNS
    command: docker compose up -d
    args:
      chdir: /home/cloud/coredns
